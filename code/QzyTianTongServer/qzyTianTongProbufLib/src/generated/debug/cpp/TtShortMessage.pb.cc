// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TtShortMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TtShortMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace phonedata {

namespace {

const ::google::protobuf::Descriptor* TtShortMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TtShortMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TtShortMessage_ShortMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TtShortMessage_ShortMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_TtShortMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_TtShortMessage_2eproto() {
  protobuf_AddDesc_TtShortMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "TtShortMessage.proto");
  GOOGLE_CHECK(file != NULL);
  TtShortMessage_descriptor_ = file->message_type(0);
  static const int TtShortMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtShortMessage, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtShortMessage, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtShortMessage, shortmessage_),
  };
  TtShortMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TtShortMessage_descriptor_,
      TtShortMessage::internal_default_instance(),
      TtShortMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(TtShortMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtShortMessage, _internal_metadata_));
  TtShortMessage_ShortMessage_descriptor_ = TtShortMessage_descriptor_->nested_type(0);
  static const int TtShortMessage_ShortMessage_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtShortMessage_ShortMessage, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtShortMessage_ShortMessage, numberphone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtShortMessage_ShortMessage, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtShortMessage_ShortMessage, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtShortMessage_ShortMessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtShortMessage_ShortMessage, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtShortMessage_ShortMessage, isread_),
  };
  TtShortMessage_ShortMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TtShortMessage_ShortMessage_descriptor_,
      TtShortMessage_ShortMessage::internal_default_instance(),
      TtShortMessage_ShortMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(TtShortMessage_ShortMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtShortMessage_ShortMessage, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_TtShortMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TtShortMessage_descriptor_, TtShortMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TtShortMessage_ShortMessage_descriptor_, TtShortMessage_ShortMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_TtShortMessage_2eproto() {
  TtShortMessage_default_instance_.Shutdown();
  delete TtShortMessage_reflection_;
  TtShortMessage_ShortMessage_default_instance_.Shutdown();
  delete TtShortMessage_ShortMessage_reflection_;
}

void protobuf_InitDefaults_TtShortMessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  TtShortMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TtShortMessage_ShortMessage_default_instance_.DefaultConstruct();
  TtShortMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TtShortMessage_ShortMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_TtShortMessage_2eproto_once_);
void protobuf_InitDefaults_TtShortMessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_TtShortMessage_2eproto_once_,
                 &protobuf_InitDefaults_TtShortMessage_2eproto_impl);
}
void protobuf_AddDesc_TtShortMessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_TtShortMessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024TtShortMessage.proto\022\tphonedata\"\355\001\n\016Tt"
    "ShortMessage\022\017\n\007request\030\001 \001(\010\022\020\n\010respons"
    "e\030\002 \001(\010\022<\n\014shortMessage\030\003 \003(\0132&.phonedat"
    "a.TtShortMessage.ShortMessage\032z\n\014ShortMe"
    "ssage\022\n\n\002id\030\001 \001(\003\022\023\n\013numberPhone\030\002 \001(\t\022\017"
    "\n\007message\030\003 \001(\t\022\014\n\004time\030\004 \001(\t\022\014\n\004type\030\005 "
    "\001(\005\022\014\n\004name\030\006 \001(\t\022\016\n\006isRead\030\007 \001(\010B\'\n\017com"
    ".qzy.tt.dataB\024TtShortMessageProtosb\006prot"
    "o3", 322);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TtShortMessage.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_TtShortMessage_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_TtShortMessage_2eproto_once_);
void protobuf_AddDesc_TtShortMessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_TtShortMessage_2eproto_once_,
                 &protobuf_AddDesc_TtShortMessage_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TtShortMessage_2eproto {
  StaticDescriptorInitializer_TtShortMessage_2eproto() {
    protobuf_AddDesc_TtShortMessage_2eproto();
  }
} static_descriptor_initializer_TtShortMessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TtShortMessage_ShortMessage::kIdFieldNumber;
const int TtShortMessage_ShortMessage::kNumberPhoneFieldNumber;
const int TtShortMessage_ShortMessage::kMessageFieldNumber;
const int TtShortMessage_ShortMessage::kTimeFieldNumber;
const int TtShortMessage_ShortMessage::kTypeFieldNumber;
const int TtShortMessage_ShortMessage::kNameFieldNumber;
const int TtShortMessage_ShortMessage::kIsReadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TtShortMessage_ShortMessage::TtShortMessage_ShortMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TtShortMessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:phonedata.TtShortMessage.ShortMessage)
}

void TtShortMessage_ShortMessage::InitAsDefaultInstance() {
}

TtShortMessage_ShortMessage::TtShortMessage_ShortMessage(const TtShortMessage_ShortMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phonedata.TtShortMessage.ShortMessage)
}

void TtShortMessage_ShortMessage::SharedCtor() {
  numberphone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&isread_) -
    reinterpret_cast<char*>(&id_) + sizeof(isread_));
  _cached_size_ = 0;
}

TtShortMessage_ShortMessage::~TtShortMessage_ShortMessage() {
  // @@protoc_insertion_point(destructor:phonedata.TtShortMessage.ShortMessage)
  SharedDtor();
}

void TtShortMessage_ShortMessage::SharedDtor() {
  numberphone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TtShortMessage_ShortMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TtShortMessage_ShortMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TtShortMessage_ShortMessage_descriptor_;
}

const TtShortMessage_ShortMessage& TtShortMessage_ShortMessage::default_instance() {
  protobuf_InitDefaults_TtShortMessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TtShortMessage_ShortMessage> TtShortMessage_ShortMessage_default_instance_;

TtShortMessage_ShortMessage* TtShortMessage_ShortMessage::New(::google::protobuf::Arena* arena) const {
  TtShortMessage_ShortMessage* n = new TtShortMessage_ShortMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TtShortMessage_ShortMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:phonedata.TtShortMessage.ShortMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TtShortMessage_ShortMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TtShortMessage_ShortMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, isread_);
  numberphone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool TtShortMessage_ShortMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phonedata.TtShortMessage.ShortMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_numberPhone;
        break;
      }

      // optional string numberPhone = 2;
      case 2: {
        if (tag == 18) {
         parse_numberPhone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_numberphone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->numberphone().data(), this->numberphone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phonedata.TtShortMessage.ShortMessage.numberPhone"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_message;
        break;
      }

      // optional string message = 3;
      case 3: {
        if (tag == 26) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phonedata.TtShortMessage.ShortMessage.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_time;
        break;
      }

      // optional string time = 4;
      case 4: {
        if (tag == 34) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phonedata.TtShortMessage.ShortMessage.time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional int32 type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_name;
        break;
      }

      // optional string name = 6;
      case 6: {
        if (tag == 50) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phonedata.TtShortMessage.ShortMessage.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_isRead;
        break;
      }

      // optional bool isRead = 7;
      case 7: {
        if (tag == 56) {
         parse_isRead:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isread_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phonedata.TtShortMessage.ShortMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phonedata.TtShortMessage.ShortMessage)
  return false;
#undef DO_
}

void TtShortMessage_ShortMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phonedata.TtShortMessage.ShortMessage)
  // optional int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string numberPhone = 2;
  if (this->numberphone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->numberphone().data(), this->numberphone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtShortMessage.ShortMessage.numberPhone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->numberphone(), output);
  }

  // optional string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtShortMessage.ShortMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // optional string time = 4;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtShortMessage.ShortMessage.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->time(), output);
  }

  // optional int32 type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  // optional string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtShortMessage.ShortMessage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // optional bool isRead = 7;
  if (this->isread() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isread(), output);
  }

  // @@protoc_insertion_point(serialize_end:phonedata.TtShortMessage.ShortMessage)
}

::google::protobuf::uint8* TtShortMessage_ShortMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phonedata.TtShortMessage.ShortMessage)
  // optional int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string numberPhone = 2;
  if (this->numberphone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->numberphone().data(), this->numberphone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtShortMessage.ShortMessage.numberPhone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->numberphone(), target);
  }

  // optional string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtShortMessage.ShortMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // optional string time = 4;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtShortMessage.ShortMessage.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->time(), target);
  }

  // optional int32 type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  // optional string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtShortMessage.ShortMessage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // optional bool isRead = 7;
  if (this->isread() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isread(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:phonedata.TtShortMessage.ShortMessage)
  return target;
}

size_t TtShortMessage_ShortMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phonedata.TtShortMessage.ShortMessage)
  size_t total_size = 0;

  // optional int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // optional string numberPhone = 2;
  if (this->numberphone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->numberphone());
  }

  // optional string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional string time = 4;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  // optional int32 type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional bool isRead = 7;
  if (this->isread() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TtShortMessage_ShortMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phonedata.TtShortMessage.ShortMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TtShortMessage_ShortMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TtShortMessage_ShortMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phonedata.TtShortMessage.ShortMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phonedata.TtShortMessage.ShortMessage)
    UnsafeMergeFrom(*source);
  }
}

void TtShortMessage_ShortMessage::MergeFrom(const TtShortMessage_ShortMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phonedata.TtShortMessage.ShortMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TtShortMessage_ShortMessage::UnsafeMergeFrom(const TtShortMessage_ShortMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.numberphone().size() > 0) {

    numberphone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.numberphone_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.isread() != 0) {
    set_isread(from.isread());
  }
}

void TtShortMessage_ShortMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phonedata.TtShortMessage.ShortMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TtShortMessage_ShortMessage::CopyFrom(const TtShortMessage_ShortMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phonedata.TtShortMessage.ShortMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TtShortMessage_ShortMessage::IsInitialized() const {

  return true;
}

void TtShortMessage_ShortMessage::Swap(TtShortMessage_ShortMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TtShortMessage_ShortMessage::InternalSwap(TtShortMessage_ShortMessage* other) {
  std::swap(id_, other->id_);
  numberphone_.Swap(&other->numberphone_);
  message_.Swap(&other->message_);
  time_.Swap(&other->time_);
  std::swap(type_, other->type_);
  name_.Swap(&other->name_);
  std::swap(isread_, other->isread_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TtShortMessage_ShortMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TtShortMessage_ShortMessage_descriptor_;
  metadata.reflection = TtShortMessage_ShortMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TtShortMessage::kRequestFieldNumber;
const int TtShortMessage::kResponseFieldNumber;
const int TtShortMessage::kShortMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TtShortMessage::TtShortMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TtShortMessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:phonedata.TtShortMessage)
}

void TtShortMessage::InitAsDefaultInstance() {
}

TtShortMessage::TtShortMessage(const TtShortMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phonedata.TtShortMessage)
}

void TtShortMessage::SharedCtor() {
  ::memset(&request_, 0, reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&request_) + sizeof(response_));
  _cached_size_ = 0;
}

TtShortMessage::~TtShortMessage() {
  // @@protoc_insertion_point(destructor:phonedata.TtShortMessage)
  SharedDtor();
}

void TtShortMessage::SharedDtor() {
}

void TtShortMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TtShortMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TtShortMessage_descriptor_;
}

const TtShortMessage& TtShortMessage::default_instance() {
  protobuf_InitDefaults_TtShortMessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TtShortMessage> TtShortMessage_default_instance_;

TtShortMessage* TtShortMessage::New(::google::protobuf::Arena* arena) const {
  TtShortMessage* n = new TtShortMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TtShortMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:phonedata.TtShortMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TtShortMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TtShortMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(request_, response_);

#undef ZR_HELPER_
#undef ZR_

  shortmessage_.Clear();
}

bool TtShortMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phonedata.TtShortMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool request = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &request_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_response;
        break;
      }

      // optional bool response = 2;
      case 2: {
        if (tag == 16) {
         parse_response:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_shortMessage;
        break;
      }

      // repeated .phonedata.TtShortMessage.ShortMessage shortMessage = 3;
      case 3: {
        if (tag == 26) {
         parse_shortMessage:
          DO_(input->IncrementRecursionDepth());
         parse_loop_shortMessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_shortmessage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_shortMessage;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phonedata.TtShortMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phonedata.TtShortMessage)
  return false;
#undef DO_
}

void TtShortMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phonedata.TtShortMessage)
  // optional bool request = 1;
  if (this->request() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->request(), output);
  }

  // optional bool response = 2;
  if (this->response() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->response(), output);
  }

  // repeated .phonedata.TtShortMessage.ShortMessage shortMessage = 3;
  for (unsigned int i = 0, n = this->shortmessage_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->shortmessage(i), output);
  }

  // @@protoc_insertion_point(serialize_end:phonedata.TtShortMessage)
}

::google::protobuf::uint8* TtShortMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phonedata.TtShortMessage)
  // optional bool request = 1;
  if (this->request() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->request(), target);
  }

  // optional bool response = 2;
  if (this->response() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->response(), target);
  }

  // repeated .phonedata.TtShortMessage.ShortMessage shortMessage = 3;
  for (unsigned int i = 0, n = this->shortmessage_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->shortmessage(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:phonedata.TtShortMessage)
  return target;
}

size_t TtShortMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phonedata.TtShortMessage)
  size_t total_size = 0;

  // optional bool request = 1;
  if (this->request() != 0) {
    total_size += 1 + 1;
  }

  // optional bool response = 2;
  if (this->response() != 0) {
    total_size += 1 + 1;
  }

  // repeated .phonedata.TtShortMessage.ShortMessage shortMessage = 3;
  {
    unsigned int count = this->shortmessage_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shortmessage(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TtShortMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phonedata.TtShortMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TtShortMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TtShortMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phonedata.TtShortMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phonedata.TtShortMessage)
    UnsafeMergeFrom(*source);
  }
}

void TtShortMessage::MergeFrom(const TtShortMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phonedata.TtShortMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TtShortMessage::UnsafeMergeFrom(const TtShortMessage& from) {
  GOOGLE_DCHECK(&from != this);
  shortmessage_.MergeFrom(from.shortmessage_);
  if (from.request() != 0) {
    set_request(from.request());
  }
  if (from.response() != 0) {
    set_response(from.response());
  }
}

void TtShortMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phonedata.TtShortMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TtShortMessage::CopyFrom(const TtShortMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phonedata.TtShortMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TtShortMessage::IsInitialized() const {

  return true;
}

void TtShortMessage::Swap(TtShortMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TtShortMessage::InternalSwap(TtShortMessage* other) {
  std::swap(request_, other->request_);
  std::swap(response_, other->response_);
  shortmessage_.UnsafeArenaSwap(&other->shortmessage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TtShortMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TtShortMessage_descriptor_;
  metadata.reflection = TtShortMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TtShortMessage_ShortMessage

// optional int64 id = 1;
void TtShortMessage_ShortMessage::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TtShortMessage_ShortMessage::id() const {
  // @@protoc_insertion_point(field_get:phonedata.TtShortMessage.ShortMessage.id)
  return id_;
}
void TtShortMessage_ShortMessage::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtShortMessage.ShortMessage.id)
}

// optional string numberPhone = 2;
void TtShortMessage_ShortMessage::clear_numberphone() {
  numberphone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TtShortMessage_ShortMessage::numberphone() const {
  // @@protoc_insertion_point(field_get:phonedata.TtShortMessage.ShortMessage.numberPhone)
  return numberphone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtShortMessage_ShortMessage::set_numberphone(const ::std::string& value) {
  
  numberphone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phonedata.TtShortMessage.ShortMessage.numberPhone)
}
void TtShortMessage_ShortMessage::set_numberphone(const char* value) {
  
  numberphone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phonedata.TtShortMessage.ShortMessage.numberPhone)
}
void TtShortMessage_ShortMessage::set_numberphone(const char* value, size_t size) {
  
  numberphone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phonedata.TtShortMessage.ShortMessage.numberPhone)
}
::std::string* TtShortMessage_ShortMessage::mutable_numberphone() {
  
  // @@protoc_insertion_point(field_mutable:phonedata.TtShortMessage.ShortMessage.numberPhone)
  return numberphone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TtShortMessage_ShortMessage::release_numberphone() {
  // @@protoc_insertion_point(field_release:phonedata.TtShortMessage.ShortMessage.numberPhone)
  
  return numberphone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtShortMessage_ShortMessage::set_allocated_numberphone(::std::string* numberphone) {
  if (numberphone != NULL) {
    
  } else {
    
  }
  numberphone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), numberphone);
  // @@protoc_insertion_point(field_set_allocated:phonedata.TtShortMessage.ShortMessage.numberPhone)
}

// optional string message = 3;
void TtShortMessage_ShortMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TtShortMessage_ShortMessage::message() const {
  // @@protoc_insertion_point(field_get:phonedata.TtShortMessage.ShortMessage.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtShortMessage_ShortMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phonedata.TtShortMessage.ShortMessage.message)
}
void TtShortMessage_ShortMessage::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phonedata.TtShortMessage.ShortMessage.message)
}
void TtShortMessage_ShortMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phonedata.TtShortMessage.ShortMessage.message)
}
::std::string* TtShortMessage_ShortMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:phonedata.TtShortMessage.ShortMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TtShortMessage_ShortMessage::release_message() {
  // @@protoc_insertion_point(field_release:phonedata.TtShortMessage.ShortMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtShortMessage_ShortMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:phonedata.TtShortMessage.ShortMessage.message)
}

// optional string time = 4;
void TtShortMessage_ShortMessage::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TtShortMessage_ShortMessage::time() const {
  // @@protoc_insertion_point(field_get:phonedata.TtShortMessage.ShortMessage.time)
  return time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtShortMessage_ShortMessage::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phonedata.TtShortMessage.ShortMessage.time)
}
void TtShortMessage_ShortMessage::set_time(const char* value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phonedata.TtShortMessage.ShortMessage.time)
}
void TtShortMessage_ShortMessage::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phonedata.TtShortMessage.ShortMessage.time)
}
::std::string* TtShortMessage_ShortMessage::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:phonedata.TtShortMessage.ShortMessage.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TtShortMessage_ShortMessage::release_time() {
  // @@protoc_insertion_point(field_release:phonedata.TtShortMessage.ShortMessage.time)
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtShortMessage_ShortMessage::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:phonedata.TtShortMessage.ShortMessage.time)
}

// optional int32 type = 5;
void TtShortMessage_ShortMessage::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 TtShortMessage_ShortMessage::type() const {
  // @@protoc_insertion_point(field_get:phonedata.TtShortMessage.ShortMessage.type)
  return type_;
}
void TtShortMessage_ShortMessage::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtShortMessage.ShortMessage.type)
}

// optional string name = 6;
void TtShortMessage_ShortMessage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TtShortMessage_ShortMessage::name() const {
  // @@protoc_insertion_point(field_get:phonedata.TtShortMessage.ShortMessage.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtShortMessage_ShortMessage::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phonedata.TtShortMessage.ShortMessage.name)
}
void TtShortMessage_ShortMessage::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phonedata.TtShortMessage.ShortMessage.name)
}
void TtShortMessage_ShortMessage::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phonedata.TtShortMessage.ShortMessage.name)
}
::std::string* TtShortMessage_ShortMessage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:phonedata.TtShortMessage.ShortMessage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TtShortMessage_ShortMessage::release_name() {
  // @@protoc_insertion_point(field_release:phonedata.TtShortMessage.ShortMessage.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtShortMessage_ShortMessage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:phonedata.TtShortMessage.ShortMessage.name)
}

// optional bool isRead = 7;
void TtShortMessage_ShortMessage::clear_isread() {
  isread_ = false;
}
bool TtShortMessage_ShortMessage::isread() const {
  // @@protoc_insertion_point(field_get:phonedata.TtShortMessage.ShortMessage.isRead)
  return isread_;
}
void TtShortMessage_ShortMessage::set_isread(bool value) {
  
  isread_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtShortMessage.ShortMessage.isRead)
}

inline const TtShortMessage_ShortMessage* TtShortMessage_ShortMessage::internal_default_instance() {
  return &TtShortMessage_ShortMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// TtShortMessage

// optional bool request = 1;
void TtShortMessage::clear_request() {
  request_ = false;
}
bool TtShortMessage::request() const {
  // @@protoc_insertion_point(field_get:phonedata.TtShortMessage.request)
  return request_;
}
void TtShortMessage::set_request(bool value) {
  
  request_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtShortMessage.request)
}

// optional bool response = 2;
void TtShortMessage::clear_response() {
  response_ = false;
}
bool TtShortMessage::response() const {
  // @@protoc_insertion_point(field_get:phonedata.TtShortMessage.response)
  return response_;
}
void TtShortMessage::set_response(bool value) {
  
  response_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtShortMessage.response)
}

// repeated .phonedata.TtShortMessage.ShortMessage shortMessage = 3;
int TtShortMessage::shortmessage_size() const {
  return shortmessage_.size();
}
void TtShortMessage::clear_shortmessage() {
  shortmessage_.Clear();
}
const ::phonedata::TtShortMessage_ShortMessage& TtShortMessage::shortmessage(int index) const {
  // @@protoc_insertion_point(field_get:phonedata.TtShortMessage.shortMessage)
  return shortmessage_.Get(index);
}
::phonedata::TtShortMessage_ShortMessage* TtShortMessage::mutable_shortmessage(int index) {
  // @@protoc_insertion_point(field_mutable:phonedata.TtShortMessage.shortMessage)
  return shortmessage_.Mutable(index);
}
::phonedata::TtShortMessage_ShortMessage* TtShortMessage::add_shortmessage() {
  // @@protoc_insertion_point(field_add:phonedata.TtShortMessage.shortMessage)
  return shortmessage_.Add();
}
::google::protobuf::RepeatedPtrField< ::phonedata::TtShortMessage_ShortMessage >*
TtShortMessage::mutable_shortmessage() {
  // @@protoc_insertion_point(field_mutable_list:phonedata.TtShortMessage.shortMessage)
  return &shortmessage_;
}
const ::google::protobuf::RepeatedPtrField< ::phonedata::TtShortMessage_ShortMessage >&
TtShortMessage::shortmessage() const {
  // @@protoc_insertion_point(field_list:phonedata.TtShortMessage.shortMessage)
  return shortmessage_;
}

inline const TtShortMessage* TtShortMessage::internal_default_instance() {
  return &TtShortMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace phonedata

// @@protoc_insertion_point(global_scope)
