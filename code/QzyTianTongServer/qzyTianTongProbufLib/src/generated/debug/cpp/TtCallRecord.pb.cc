// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TtCallRecord.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TtCallRecord.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace phonedata {

namespace {

const ::google::protobuf::Descriptor* TtCallRecordProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TtCallRecordProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TtCallRecordProto_CallRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TtCallRecordProto_CallRecord_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_TtCallRecord_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_TtCallRecord_2eproto() {
  protobuf_AddDesc_TtCallRecord_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "TtCallRecord.proto");
  GOOGLE_CHECK(file != NULL);
  TtCallRecordProto_descriptor_ = file->message_type(0);
  static const int TtCallRecordProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtCallRecordProto, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtCallRecordProto, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtCallRecordProto, callrecord_),
  };
  TtCallRecordProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TtCallRecordProto_descriptor_,
      TtCallRecordProto::internal_default_instance(),
      TtCallRecordProto_offsets_,
      -1,
      -1,
      -1,
      sizeof(TtCallRecordProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtCallRecordProto, _internal_metadata_));
  TtCallRecordProto_CallRecord_descriptor_ = TtCallRecordProto_descriptor_->nested_type(0);
  static const int TtCallRecordProto_CallRecord_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtCallRecordProto_CallRecord, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtCallRecordProto_CallRecord, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtCallRecordProto_CallRecord, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtCallRecordProto_CallRecord, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtCallRecordProto_CallRecord, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtCallRecordProto_CallRecord, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtCallRecordProto_CallRecord, duration_),
  };
  TtCallRecordProto_CallRecord_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TtCallRecordProto_CallRecord_descriptor_,
      TtCallRecordProto_CallRecord::internal_default_instance(),
      TtCallRecordProto_CallRecord_offsets_,
      -1,
      -1,
      -1,
      sizeof(TtCallRecordProto_CallRecord),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtCallRecordProto_CallRecord, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_TtCallRecord_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TtCallRecordProto_descriptor_, TtCallRecordProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TtCallRecordProto_CallRecord_descriptor_, TtCallRecordProto_CallRecord::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_TtCallRecord_2eproto() {
  TtCallRecordProto_default_instance_.Shutdown();
  delete TtCallRecordProto_reflection_;
  TtCallRecordProto_CallRecord_default_instance_.Shutdown();
  delete TtCallRecordProto_CallRecord_reflection_;
}

void protobuf_InitDefaults_TtCallRecord_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  TtCallRecordProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TtCallRecordProto_CallRecord_default_instance_.DefaultConstruct();
  TtCallRecordProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  TtCallRecordProto_CallRecord_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_TtCallRecord_2eproto_once_);
void protobuf_InitDefaults_TtCallRecord_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_TtCallRecord_2eproto_once_,
                 &protobuf_InitDefaults_TtCallRecord_2eproto_impl);
}
void protobuf_AddDesc_TtCallRecord_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_TtCallRecord_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022TtCallRecord.proto\022\tphonedata\"\357\001\n\021TtCa"
    "llRecordProto\022\017\n\007request\030\001 \001(\010\022\020\n\010respon"
    "se\030\002 \001(\010\022;\n\ncallRecord\030\003 \003(\0132\'.phonedata"
    ".TtCallRecordProto.CallRecord\032z\n\nCallRec"
    "ord\022\n\n\002id\030\001 \001(\003\022\023\n\013phoneNumber\030\002 \001(\t\022\014\n\004"
    "name\030\003 \001(\t\022\017\n\007address\030\004 \001(\t\022\014\n\004type\030\005 \001("
    "\005\022\014\n\004date\030\006 \001(\t\022\020\n\010duration\030\007 \001(\003B%\n\017com"
    ".qzy.tt.dataB\022TtCallRecordProtosb\006proto3", 320);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TtCallRecord.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_TtCallRecord_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_TtCallRecord_2eproto_once_);
void protobuf_AddDesc_TtCallRecord_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_TtCallRecord_2eproto_once_,
                 &protobuf_AddDesc_TtCallRecord_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TtCallRecord_2eproto {
  StaticDescriptorInitializer_TtCallRecord_2eproto() {
    protobuf_AddDesc_TtCallRecord_2eproto();
  }
} static_descriptor_initializer_TtCallRecord_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TtCallRecordProto_CallRecord::kIdFieldNumber;
const int TtCallRecordProto_CallRecord::kPhoneNumberFieldNumber;
const int TtCallRecordProto_CallRecord::kNameFieldNumber;
const int TtCallRecordProto_CallRecord::kAddressFieldNumber;
const int TtCallRecordProto_CallRecord::kTypeFieldNumber;
const int TtCallRecordProto_CallRecord::kDateFieldNumber;
const int TtCallRecordProto_CallRecord::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TtCallRecordProto_CallRecord::TtCallRecordProto_CallRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TtCallRecord_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:phonedata.TtCallRecordProto.CallRecord)
}

void TtCallRecordProto_CallRecord::InitAsDefaultInstance() {
}

TtCallRecordProto_CallRecord::TtCallRecordProto_CallRecord(const TtCallRecordProto_CallRecord& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phonedata.TtCallRecordProto.CallRecord)
}

void TtCallRecordProto_CallRecord::SharedCtor() {
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_) + sizeof(type_));
  _cached_size_ = 0;
}

TtCallRecordProto_CallRecord::~TtCallRecordProto_CallRecord() {
  // @@protoc_insertion_point(destructor:phonedata.TtCallRecordProto.CallRecord)
  SharedDtor();
}

void TtCallRecordProto_CallRecord::SharedDtor() {
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TtCallRecordProto_CallRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TtCallRecordProto_CallRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TtCallRecordProto_CallRecord_descriptor_;
}

const TtCallRecordProto_CallRecord& TtCallRecordProto_CallRecord::default_instance() {
  protobuf_InitDefaults_TtCallRecord_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TtCallRecordProto_CallRecord> TtCallRecordProto_CallRecord_default_instance_;

TtCallRecordProto_CallRecord* TtCallRecordProto_CallRecord::New(::google::protobuf::Arena* arena) const {
  TtCallRecordProto_CallRecord* n = new TtCallRecordProto_CallRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TtCallRecordProto_CallRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:phonedata.TtCallRecordProto.CallRecord)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TtCallRecordProto_CallRecord, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TtCallRecordProto_CallRecord*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, type_);
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool TtCallRecordProto_CallRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phonedata.TtCallRecordProto.CallRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_phoneNumber;
        break;
      }

      // optional string phoneNumber = 2;
      case 2: {
        if (tag == 18) {
         parse_phoneNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phonedata.TtCallRecordProto.CallRecord.phoneNumber"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phonedata.TtCallRecordProto.CallRecord.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_address;
        break;
      }

      // optional string address = 4;
      case 4: {
        if (tag == 34) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phonedata.TtCallRecordProto.CallRecord.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional int32 type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_date;
        break;
      }

      // optional string date = 6;
      case 6: {
        if (tag == 50) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phonedata.TtCallRecordProto.CallRecord.date"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_duration;
        break;
      }

      // optional int64 duration = 7;
      case 7: {
        if (tag == 56) {
         parse_duration:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phonedata.TtCallRecordProto.CallRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phonedata.TtCallRecordProto.CallRecord)
  return false;
#undef DO_
}

void TtCallRecordProto_CallRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phonedata.TtCallRecordProto.CallRecord)
  // optional int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string phoneNumber = 2;
  if (this->phonenumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtCallRecordProto.CallRecord.phoneNumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phonenumber(), output);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtCallRecordProto.CallRecord.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtCallRecordProto.CallRecord.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address(), output);
  }

  // optional int32 type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  // optional string date = 6;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtCallRecordProto.CallRecord.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->date(), output);
  }

  // optional int64 duration = 7;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->duration(), output);
  }

  // @@protoc_insertion_point(serialize_end:phonedata.TtCallRecordProto.CallRecord)
}

::google::protobuf::uint8* TtCallRecordProto_CallRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phonedata.TtCallRecordProto.CallRecord)
  // optional int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string phoneNumber = 2;
  if (this->phonenumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtCallRecordProto.CallRecord.phoneNumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phonenumber(), target);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtCallRecordProto.CallRecord.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtCallRecordProto.CallRecord.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }

  // optional int32 type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  // optional string date = 6;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtCallRecordProto.CallRecord.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->date(), target);
  }

  // optional int64 duration = 7;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->duration(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:phonedata.TtCallRecordProto.CallRecord)
  return target;
}

size_t TtCallRecordProto_CallRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phonedata.TtCallRecordProto.CallRecord)
  size_t total_size = 0;

  // optional int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // optional string phoneNumber = 2;
  if (this->phonenumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phonenumber());
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // optional int32 type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional string date = 6;
  if (this->date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // optional int64 duration = 7;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TtCallRecordProto_CallRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phonedata.TtCallRecordProto.CallRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TtCallRecordProto_CallRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TtCallRecordProto_CallRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phonedata.TtCallRecordProto.CallRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phonedata.TtCallRecordProto.CallRecord)
    UnsafeMergeFrom(*source);
  }
}

void TtCallRecordProto_CallRecord::MergeFrom(const TtCallRecordProto_CallRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phonedata.TtCallRecordProto.CallRecord)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TtCallRecordProto_CallRecord::UnsafeMergeFrom(const TtCallRecordProto_CallRecord& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.phonenumber().size() > 0) {

    phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
}

void TtCallRecordProto_CallRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phonedata.TtCallRecordProto.CallRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TtCallRecordProto_CallRecord::CopyFrom(const TtCallRecordProto_CallRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phonedata.TtCallRecordProto.CallRecord)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TtCallRecordProto_CallRecord::IsInitialized() const {

  return true;
}

void TtCallRecordProto_CallRecord::Swap(TtCallRecordProto_CallRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TtCallRecordProto_CallRecord::InternalSwap(TtCallRecordProto_CallRecord* other) {
  std::swap(id_, other->id_);
  phonenumber_.Swap(&other->phonenumber_);
  name_.Swap(&other->name_);
  address_.Swap(&other->address_);
  std::swap(type_, other->type_);
  date_.Swap(&other->date_);
  std::swap(duration_, other->duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TtCallRecordProto_CallRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TtCallRecordProto_CallRecord_descriptor_;
  metadata.reflection = TtCallRecordProto_CallRecord_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TtCallRecordProto::kRequestFieldNumber;
const int TtCallRecordProto::kResponseFieldNumber;
const int TtCallRecordProto::kCallRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TtCallRecordProto::TtCallRecordProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TtCallRecord_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:phonedata.TtCallRecordProto)
}

void TtCallRecordProto::InitAsDefaultInstance() {
}

TtCallRecordProto::TtCallRecordProto(const TtCallRecordProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phonedata.TtCallRecordProto)
}

void TtCallRecordProto::SharedCtor() {
  ::memset(&request_, 0, reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&request_) + sizeof(response_));
  _cached_size_ = 0;
}

TtCallRecordProto::~TtCallRecordProto() {
  // @@protoc_insertion_point(destructor:phonedata.TtCallRecordProto)
  SharedDtor();
}

void TtCallRecordProto::SharedDtor() {
}

void TtCallRecordProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TtCallRecordProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TtCallRecordProto_descriptor_;
}

const TtCallRecordProto& TtCallRecordProto::default_instance() {
  protobuf_InitDefaults_TtCallRecord_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TtCallRecordProto> TtCallRecordProto_default_instance_;

TtCallRecordProto* TtCallRecordProto::New(::google::protobuf::Arena* arena) const {
  TtCallRecordProto* n = new TtCallRecordProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TtCallRecordProto::Clear() {
// @@protoc_insertion_point(message_clear_start:phonedata.TtCallRecordProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TtCallRecordProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TtCallRecordProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(request_, response_);

#undef ZR_HELPER_
#undef ZR_

  callrecord_.Clear();
}

bool TtCallRecordProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phonedata.TtCallRecordProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool request = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &request_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_response;
        break;
      }

      // optional bool response = 2;
      case 2: {
        if (tag == 16) {
         parse_response:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_callRecord;
        break;
      }

      // repeated .phonedata.TtCallRecordProto.CallRecord callRecord = 3;
      case 3: {
        if (tag == 26) {
         parse_callRecord:
          DO_(input->IncrementRecursionDepth());
         parse_loop_callRecord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_callrecord()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_callRecord;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phonedata.TtCallRecordProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phonedata.TtCallRecordProto)
  return false;
#undef DO_
}

void TtCallRecordProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phonedata.TtCallRecordProto)
  // optional bool request = 1;
  if (this->request() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->request(), output);
  }

  // optional bool response = 2;
  if (this->response() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->response(), output);
  }

  // repeated .phonedata.TtCallRecordProto.CallRecord callRecord = 3;
  for (unsigned int i = 0, n = this->callrecord_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->callrecord(i), output);
  }

  // @@protoc_insertion_point(serialize_end:phonedata.TtCallRecordProto)
}

::google::protobuf::uint8* TtCallRecordProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phonedata.TtCallRecordProto)
  // optional bool request = 1;
  if (this->request() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->request(), target);
  }

  // optional bool response = 2;
  if (this->response() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->response(), target);
  }

  // repeated .phonedata.TtCallRecordProto.CallRecord callRecord = 3;
  for (unsigned int i = 0, n = this->callrecord_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->callrecord(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:phonedata.TtCallRecordProto)
  return target;
}

size_t TtCallRecordProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phonedata.TtCallRecordProto)
  size_t total_size = 0;

  // optional bool request = 1;
  if (this->request() != 0) {
    total_size += 1 + 1;
  }

  // optional bool response = 2;
  if (this->response() != 0) {
    total_size += 1 + 1;
  }

  // repeated .phonedata.TtCallRecordProto.CallRecord callRecord = 3;
  {
    unsigned int count = this->callrecord_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->callrecord(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TtCallRecordProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phonedata.TtCallRecordProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TtCallRecordProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TtCallRecordProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phonedata.TtCallRecordProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phonedata.TtCallRecordProto)
    UnsafeMergeFrom(*source);
  }
}

void TtCallRecordProto::MergeFrom(const TtCallRecordProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phonedata.TtCallRecordProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TtCallRecordProto::UnsafeMergeFrom(const TtCallRecordProto& from) {
  GOOGLE_DCHECK(&from != this);
  callrecord_.MergeFrom(from.callrecord_);
  if (from.request() != 0) {
    set_request(from.request());
  }
  if (from.response() != 0) {
    set_response(from.response());
  }
}

void TtCallRecordProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phonedata.TtCallRecordProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TtCallRecordProto::CopyFrom(const TtCallRecordProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phonedata.TtCallRecordProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TtCallRecordProto::IsInitialized() const {

  return true;
}

void TtCallRecordProto::Swap(TtCallRecordProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TtCallRecordProto::InternalSwap(TtCallRecordProto* other) {
  std::swap(request_, other->request_);
  std::swap(response_, other->response_);
  callrecord_.UnsafeArenaSwap(&other->callrecord_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TtCallRecordProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TtCallRecordProto_descriptor_;
  metadata.reflection = TtCallRecordProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TtCallRecordProto_CallRecord

// optional int64 id = 1;
void TtCallRecordProto_CallRecord::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TtCallRecordProto_CallRecord::id() const {
  // @@protoc_insertion_point(field_get:phonedata.TtCallRecordProto.CallRecord.id)
  return id_;
}
void TtCallRecordProto_CallRecord::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtCallRecordProto.CallRecord.id)
}

// optional string phoneNumber = 2;
void TtCallRecordProto_CallRecord::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TtCallRecordProto_CallRecord::phonenumber() const {
  // @@protoc_insertion_point(field_get:phonedata.TtCallRecordProto.CallRecord.phoneNumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtCallRecordProto_CallRecord::set_phonenumber(const ::std::string& value) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phonedata.TtCallRecordProto.CallRecord.phoneNumber)
}
void TtCallRecordProto_CallRecord::set_phonenumber(const char* value) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phonedata.TtCallRecordProto.CallRecord.phoneNumber)
}
void TtCallRecordProto_CallRecord::set_phonenumber(const char* value, size_t size) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phonedata.TtCallRecordProto.CallRecord.phoneNumber)
}
::std::string* TtCallRecordProto_CallRecord::mutable_phonenumber() {
  
  // @@protoc_insertion_point(field_mutable:phonedata.TtCallRecordProto.CallRecord.phoneNumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TtCallRecordProto_CallRecord::release_phonenumber() {
  // @@protoc_insertion_point(field_release:phonedata.TtCallRecordProto.CallRecord.phoneNumber)
  
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtCallRecordProto_CallRecord::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    
  } else {
    
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:phonedata.TtCallRecordProto.CallRecord.phoneNumber)
}

// optional string name = 3;
void TtCallRecordProto_CallRecord::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TtCallRecordProto_CallRecord::name() const {
  // @@protoc_insertion_point(field_get:phonedata.TtCallRecordProto.CallRecord.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtCallRecordProto_CallRecord::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phonedata.TtCallRecordProto.CallRecord.name)
}
void TtCallRecordProto_CallRecord::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phonedata.TtCallRecordProto.CallRecord.name)
}
void TtCallRecordProto_CallRecord::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phonedata.TtCallRecordProto.CallRecord.name)
}
::std::string* TtCallRecordProto_CallRecord::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:phonedata.TtCallRecordProto.CallRecord.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TtCallRecordProto_CallRecord::release_name() {
  // @@protoc_insertion_point(field_release:phonedata.TtCallRecordProto.CallRecord.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtCallRecordProto_CallRecord::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:phonedata.TtCallRecordProto.CallRecord.name)
}

// optional string address = 4;
void TtCallRecordProto_CallRecord::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TtCallRecordProto_CallRecord::address() const {
  // @@protoc_insertion_point(field_get:phonedata.TtCallRecordProto.CallRecord.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtCallRecordProto_CallRecord::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phonedata.TtCallRecordProto.CallRecord.address)
}
void TtCallRecordProto_CallRecord::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phonedata.TtCallRecordProto.CallRecord.address)
}
void TtCallRecordProto_CallRecord::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phonedata.TtCallRecordProto.CallRecord.address)
}
::std::string* TtCallRecordProto_CallRecord::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:phonedata.TtCallRecordProto.CallRecord.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TtCallRecordProto_CallRecord::release_address() {
  // @@protoc_insertion_point(field_release:phonedata.TtCallRecordProto.CallRecord.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtCallRecordProto_CallRecord::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:phonedata.TtCallRecordProto.CallRecord.address)
}

// optional int32 type = 5;
void TtCallRecordProto_CallRecord::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 TtCallRecordProto_CallRecord::type() const {
  // @@protoc_insertion_point(field_get:phonedata.TtCallRecordProto.CallRecord.type)
  return type_;
}
void TtCallRecordProto_CallRecord::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtCallRecordProto.CallRecord.type)
}

// optional string date = 6;
void TtCallRecordProto_CallRecord::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TtCallRecordProto_CallRecord::date() const {
  // @@protoc_insertion_point(field_get:phonedata.TtCallRecordProto.CallRecord.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtCallRecordProto_CallRecord::set_date(const ::std::string& value) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phonedata.TtCallRecordProto.CallRecord.date)
}
void TtCallRecordProto_CallRecord::set_date(const char* value) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phonedata.TtCallRecordProto.CallRecord.date)
}
void TtCallRecordProto_CallRecord::set_date(const char* value, size_t size) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phonedata.TtCallRecordProto.CallRecord.date)
}
::std::string* TtCallRecordProto_CallRecord::mutable_date() {
  
  // @@protoc_insertion_point(field_mutable:phonedata.TtCallRecordProto.CallRecord.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TtCallRecordProto_CallRecord::release_date() {
  // @@protoc_insertion_point(field_release:phonedata.TtCallRecordProto.CallRecord.date)
  
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtCallRecordProto_CallRecord::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    
  } else {
    
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:phonedata.TtCallRecordProto.CallRecord.date)
}

// optional int64 duration = 7;
void TtCallRecordProto_CallRecord::clear_duration() {
  duration_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TtCallRecordProto_CallRecord::duration() const {
  // @@protoc_insertion_point(field_get:phonedata.TtCallRecordProto.CallRecord.duration)
  return duration_;
}
void TtCallRecordProto_CallRecord::set_duration(::google::protobuf::int64 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtCallRecordProto.CallRecord.duration)
}

inline const TtCallRecordProto_CallRecord* TtCallRecordProto_CallRecord::internal_default_instance() {
  return &TtCallRecordProto_CallRecord_default_instance_.get();
}
// -------------------------------------------------------------------

// TtCallRecordProto

// optional bool request = 1;
void TtCallRecordProto::clear_request() {
  request_ = false;
}
bool TtCallRecordProto::request() const {
  // @@protoc_insertion_point(field_get:phonedata.TtCallRecordProto.request)
  return request_;
}
void TtCallRecordProto::set_request(bool value) {
  
  request_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtCallRecordProto.request)
}

// optional bool response = 2;
void TtCallRecordProto::clear_response() {
  response_ = false;
}
bool TtCallRecordProto::response() const {
  // @@protoc_insertion_point(field_get:phonedata.TtCallRecordProto.response)
  return response_;
}
void TtCallRecordProto::set_response(bool value) {
  
  response_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtCallRecordProto.response)
}

// repeated .phonedata.TtCallRecordProto.CallRecord callRecord = 3;
int TtCallRecordProto::callrecord_size() const {
  return callrecord_.size();
}
void TtCallRecordProto::clear_callrecord() {
  callrecord_.Clear();
}
const ::phonedata::TtCallRecordProto_CallRecord& TtCallRecordProto::callrecord(int index) const {
  // @@protoc_insertion_point(field_get:phonedata.TtCallRecordProto.callRecord)
  return callrecord_.Get(index);
}
::phonedata::TtCallRecordProto_CallRecord* TtCallRecordProto::mutable_callrecord(int index) {
  // @@protoc_insertion_point(field_mutable:phonedata.TtCallRecordProto.callRecord)
  return callrecord_.Mutable(index);
}
::phonedata::TtCallRecordProto_CallRecord* TtCallRecordProto::add_callrecord() {
  // @@protoc_insertion_point(field_add:phonedata.TtCallRecordProto.callRecord)
  return callrecord_.Add();
}
::google::protobuf::RepeatedPtrField< ::phonedata::TtCallRecordProto_CallRecord >*
TtCallRecordProto::mutable_callrecord() {
  // @@protoc_insertion_point(field_mutable_list:phonedata.TtCallRecordProto.callRecord)
  return &callrecord_;
}
const ::google::protobuf::RepeatedPtrField< ::phonedata::TtCallRecordProto_CallRecord >&
TtCallRecordProto::callrecord() const {
  // @@protoc_insertion_point(field_list:phonedata.TtCallRecordProto.callRecord)
  return callrecord_;
}

inline const TtCallRecordProto* TtCallRecordProto::internal_default_instance() {
  return &TtCallRecordProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace phonedata

// @@protoc_insertion_point(global_scope)
