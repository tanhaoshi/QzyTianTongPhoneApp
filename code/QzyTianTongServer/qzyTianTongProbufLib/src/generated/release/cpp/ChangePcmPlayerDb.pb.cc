// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChangePcmPlayerDb.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ChangePcmPlayerDb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace phonedata {

namespace {

const ::google::protobuf::Descriptor* ChangePcmPlayerDb_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChangePcmPlayerDb_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ChangePcmPlayerDb_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ChangePcmPlayerDb_2eproto() {
  protobuf_AddDesc_ChangePcmPlayerDb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ChangePcmPlayerDb.proto");
  GOOGLE_CHECK(file != NULL);
  ChangePcmPlayerDb_descriptor_ = file->message_type(0);
  static const int ChangePcmPlayerDb_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangePcmPlayerDb, db_),
  };
  ChangePcmPlayerDb_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChangePcmPlayerDb_descriptor_,
      ChangePcmPlayerDb::internal_default_instance(),
      ChangePcmPlayerDb_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChangePcmPlayerDb),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangePcmPlayerDb, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ChangePcmPlayerDb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChangePcmPlayerDb_descriptor_, ChangePcmPlayerDb::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ChangePcmPlayerDb_2eproto() {
  ChangePcmPlayerDb_default_instance_.Shutdown();
  delete ChangePcmPlayerDb_reflection_;
}

void protobuf_InitDefaults_ChangePcmPlayerDb_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ChangePcmPlayerDb_default_instance_.DefaultConstruct();
  ChangePcmPlayerDb_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ChangePcmPlayerDb_2eproto_once_);
void protobuf_InitDefaults_ChangePcmPlayerDb_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ChangePcmPlayerDb_2eproto_once_,
                 &protobuf_InitDefaults_ChangePcmPlayerDb_2eproto_impl);
}
void protobuf_AddDesc_ChangePcmPlayerDb_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ChangePcmPlayerDb_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027ChangePcmPlayerDb.proto\022\tphonedata\"\037\n\021"
    "ChangePcmPlayerDb\022\n\n\002db\030\001 \001(\005B*\n\017com.qzy"
    ".tt.dataB\027ChangePcmPlayerDbProtosb\006proto"
    "3", 121);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ChangePcmPlayerDb.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ChangePcmPlayerDb_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ChangePcmPlayerDb_2eproto_once_);
void protobuf_AddDesc_ChangePcmPlayerDb_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ChangePcmPlayerDb_2eproto_once_,
                 &protobuf_AddDesc_ChangePcmPlayerDb_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ChangePcmPlayerDb_2eproto {
  StaticDescriptorInitializer_ChangePcmPlayerDb_2eproto() {
    protobuf_AddDesc_ChangePcmPlayerDb_2eproto();
  }
} static_descriptor_initializer_ChangePcmPlayerDb_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangePcmPlayerDb::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangePcmPlayerDb::ChangePcmPlayerDb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ChangePcmPlayerDb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:phonedata.ChangePcmPlayerDb)
}

void ChangePcmPlayerDb::InitAsDefaultInstance() {
}

ChangePcmPlayerDb::ChangePcmPlayerDb(const ChangePcmPlayerDb& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phonedata.ChangePcmPlayerDb)
}

void ChangePcmPlayerDb::SharedCtor() {
  db_ = 0;
  _cached_size_ = 0;
}

ChangePcmPlayerDb::~ChangePcmPlayerDb() {
  // @@protoc_insertion_point(destructor:phonedata.ChangePcmPlayerDb)
  SharedDtor();
}

void ChangePcmPlayerDb::SharedDtor() {
}

void ChangePcmPlayerDb::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangePcmPlayerDb::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangePcmPlayerDb_descriptor_;
}

const ChangePcmPlayerDb& ChangePcmPlayerDb::default_instance() {
  protobuf_InitDefaults_ChangePcmPlayerDb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ChangePcmPlayerDb> ChangePcmPlayerDb_default_instance_;

ChangePcmPlayerDb* ChangePcmPlayerDb::New(::google::protobuf::Arena* arena) const {
  ChangePcmPlayerDb* n = new ChangePcmPlayerDb;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangePcmPlayerDb::Clear() {
// @@protoc_insertion_point(message_clear_start:phonedata.ChangePcmPlayerDb)
  db_ = 0;
}

bool ChangePcmPlayerDb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phonedata.ChangePcmPlayerDb)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 db = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &db_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phonedata.ChangePcmPlayerDb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phonedata.ChangePcmPlayerDb)
  return false;
#undef DO_
}

void ChangePcmPlayerDb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phonedata.ChangePcmPlayerDb)
  // optional int32 db = 1;
  if (this->db() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->db(), output);
  }

  // @@protoc_insertion_point(serialize_end:phonedata.ChangePcmPlayerDb)
}

::google::protobuf::uint8* ChangePcmPlayerDb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phonedata.ChangePcmPlayerDb)
  // optional int32 db = 1;
  if (this->db() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->db(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:phonedata.ChangePcmPlayerDb)
  return target;
}

size_t ChangePcmPlayerDb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phonedata.ChangePcmPlayerDb)
  size_t total_size = 0;

  // optional int32 db = 1;
  if (this->db() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->db());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangePcmPlayerDb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phonedata.ChangePcmPlayerDb)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ChangePcmPlayerDb* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangePcmPlayerDb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phonedata.ChangePcmPlayerDb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phonedata.ChangePcmPlayerDb)
    UnsafeMergeFrom(*source);
  }
}

void ChangePcmPlayerDb::MergeFrom(const ChangePcmPlayerDb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phonedata.ChangePcmPlayerDb)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ChangePcmPlayerDb::UnsafeMergeFrom(const ChangePcmPlayerDb& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.db() != 0) {
    set_db(from.db());
  }
}

void ChangePcmPlayerDb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phonedata.ChangePcmPlayerDb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangePcmPlayerDb::CopyFrom(const ChangePcmPlayerDb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phonedata.ChangePcmPlayerDb)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ChangePcmPlayerDb::IsInitialized() const {

  return true;
}

void ChangePcmPlayerDb::Swap(ChangePcmPlayerDb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangePcmPlayerDb::InternalSwap(ChangePcmPlayerDb* other) {
  std::swap(db_, other->db_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangePcmPlayerDb::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChangePcmPlayerDb_descriptor_;
  metadata.reflection = ChangePcmPlayerDb_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangePcmPlayerDb

// optional int32 db = 1;
void ChangePcmPlayerDb::clear_db() {
  db_ = 0;
}
::google::protobuf::int32 ChangePcmPlayerDb::db() const {
  // @@protoc_insertion_point(field_get:phonedata.ChangePcmPlayerDb.db)
  return db_;
}
void ChangePcmPlayerDb::set_db(::google::protobuf::int32 value) {
  
  db_ = value;
  // @@protoc_insertion_point(field_set:phonedata.ChangePcmPlayerDb.db)
}

inline const ChangePcmPlayerDb* ChangePcmPlayerDb::internal_default_instance() {
  return &ChangePcmPlayerDb_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace phonedata

// @@protoc_insertion_point(global_scope)
