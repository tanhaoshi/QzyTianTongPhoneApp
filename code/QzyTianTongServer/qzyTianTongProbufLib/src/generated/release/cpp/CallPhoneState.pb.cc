// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CallPhoneState.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CallPhoneState.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace phonedata {

namespace {

const ::google::protobuf::Descriptor* CallPhoneState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CallPhoneState_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CallPhoneState_PhoneState_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_CallPhoneState_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_CallPhoneState_2eproto() {
  protobuf_AddDesc_CallPhoneState_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CallPhoneState.proto");
  GOOGLE_CHECK(file != NULL);
  CallPhoneState_descriptor_ = file->message_type(0);
  static const int CallPhoneState_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallPhoneState, phonestate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallPhoneState, ttphonesignal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallPhoneState, phonenumber_),
  };
  CallPhoneState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CallPhoneState_descriptor_,
      CallPhoneState::internal_default_instance(),
      CallPhoneState_offsets_,
      -1,
      -1,
      -1,
      sizeof(CallPhoneState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallPhoneState, _internal_metadata_));
  CallPhoneState_PhoneState_descriptor_ = CallPhoneState_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CallPhoneState_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CallPhoneState_descriptor_, CallPhoneState::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CallPhoneState_2eproto() {
  CallPhoneState_default_instance_.Shutdown();
  delete CallPhoneState_reflection_;
}

void protobuf_InitDefaults_CallPhoneState_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  CallPhoneState_default_instance_.DefaultConstruct();
  CallPhoneState_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_CallPhoneState_2eproto_once_);
void protobuf_InitDefaults_CallPhoneState_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_CallPhoneState_2eproto_once_,
                 &protobuf_InitDefaults_CallPhoneState_2eproto_impl);
}
void protobuf_AddDesc_CallPhoneState_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_CallPhoneState_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024CallPhoneState.proto\022\tphonedata\"\277\001\n\016Ca"
    "llPhoneState\0228\n\nphoneState\030\001 \001(\0162$.phone"
    "data.CallPhoneState.PhoneState\022\025\n\rttPhon"
    "eSignal\030\002 \001(\005\022\023\n\013phoneNumber\030\003 \001(\t\"G\n\nPh"
    "oneState\022\n\n\006NOCALL\020\000\022\010\n\004RING\020\001\022\010\n\004CALL\020\002"
    "\022\013\n\007HUANGUP\020\003\022\014\n\010INCOMING\020\004B\'\n\017com.qzy.t"
    "t.dataB\024CallPhoneStateProtosb\006proto3", 276);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CallPhoneState.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CallPhoneState_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_CallPhoneState_2eproto_once_);
void protobuf_AddDesc_CallPhoneState_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_CallPhoneState_2eproto_once_,
                 &protobuf_AddDesc_CallPhoneState_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CallPhoneState_2eproto {
  StaticDescriptorInitializer_CallPhoneState_2eproto() {
    protobuf_AddDesc_CallPhoneState_2eproto();
  }
} static_descriptor_initializer_CallPhoneState_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* CallPhoneState_PhoneState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallPhoneState_PhoneState_descriptor_;
}
bool CallPhoneState_PhoneState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CallPhoneState_PhoneState CallPhoneState::NOCALL;
const CallPhoneState_PhoneState CallPhoneState::RING;
const CallPhoneState_PhoneState CallPhoneState::CALL;
const CallPhoneState_PhoneState CallPhoneState::HUANGUP;
const CallPhoneState_PhoneState CallPhoneState::INCOMING;
const CallPhoneState_PhoneState CallPhoneState::PhoneState_MIN;
const CallPhoneState_PhoneState CallPhoneState::PhoneState_MAX;
const int CallPhoneState::PhoneState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallPhoneState::kPhoneStateFieldNumber;
const int CallPhoneState::kTtPhoneSignalFieldNumber;
const int CallPhoneState::kPhoneNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallPhoneState::CallPhoneState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_CallPhoneState_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:phonedata.CallPhoneState)
}

void CallPhoneState::InitAsDefaultInstance() {
}

CallPhoneState::CallPhoneState(const CallPhoneState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phonedata.CallPhoneState)
}

void CallPhoneState::SharedCtor() {
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&phonestate_, 0, reinterpret_cast<char*>(&ttphonesignal_) -
    reinterpret_cast<char*>(&phonestate_) + sizeof(ttphonesignal_));
  _cached_size_ = 0;
}

CallPhoneState::~CallPhoneState() {
  // @@protoc_insertion_point(destructor:phonedata.CallPhoneState)
  SharedDtor();
}

void CallPhoneState::SharedDtor() {
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallPhoneState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallPhoneState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallPhoneState_descriptor_;
}

const CallPhoneState& CallPhoneState::default_instance() {
  protobuf_InitDefaults_CallPhoneState_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CallPhoneState> CallPhoneState_default_instance_;

CallPhoneState* CallPhoneState::New(::google::protobuf::Arena* arena) const {
  CallPhoneState* n = new CallPhoneState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallPhoneState::Clear() {
// @@protoc_insertion_point(message_clear_start:phonedata.CallPhoneState)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CallPhoneState, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CallPhoneState*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(phonestate_, ttphonesignal_);
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CallPhoneState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phonedata.CallPhoneState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .phonedata.CallPhoneState.PhoneState phoneState = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_phonestate(static_cast< ::phonedata::CallPhoneState_PhoneState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ttPhoneSignal;
        break;
      }

      // optional int32 ttPhoneSignal = 2;
      case 2: {
        if (tag == 16) {
         parse_ttPhoneSignal:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ttphonesignal_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_phoneNumber;
        break;
      }

      // optional string phoneNumber = 3;
      case 3: {
        if (tag == 26) {
         parse_phoneNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phonedata.CallPhoneState.phoneNumber"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phonedata.CallPhoneState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phonedata.CallPhoneState)
  return false;
#undef DO_
}

void CallPhoneState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phonedata.CallPhoneState)
  // optional .phonedata.CallPhoneState.PhoneState phoneState = 1;
  if (this->phonestate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->phonestate(), output);
  }

  // optional int32 ttPhoneSignal = 2;
  if (this->ttphonesignal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ttphonesignal(), output);
  }

  // optional string phoneNumber = 3;
  if (this->phonenumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.CallPhoneState.phoneNumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phonenumber(), output);
  }

  // @@protoc_insertion_point(serialize_end:phonedata.CallPhoneState)
}

::google::protobuf::uint8* CallPhoneState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phonedata.CallPhoneState)
  // optional .phonedata.CallPhoneState.PhoneState phoneState = 1;
  if (this->phonestate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->phonestate(), target);
  }

  // optional int32 ttPhoneSignal = 2;
  if (this->ttphonesignal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ttphonesignal(), target);
  }

  // optional string phoneNumber = 3;
  if (this->phonenumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.CallPhoneState.phoneNumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phonenumber(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:phonedata.CallPhoneState)
  return target;
}

size_t CallPhoneState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phonedata.CallPhoneState)
  size_t total_size = 0;

  // optional .phonedata.CallPhoneState.PhoneState phoneState = 1;
  if (this->phonestate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->phonestate());
  }

  // optional int32 ttPhoneSignal = 2;
  if (this->ttphonesignal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ttphonesignal());
  }

  // optional string phoneNumber = 3;
  if (this->phonenumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phonenumber());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallPhoneState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phonedata.CallPhoneState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CallPhoneState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallPhoneState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phonedata.CallPhoneState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phonedata.CallPhoneState)
    UnsafeMergeFrom(*source);
  }
}

void CallPhoneState::MergeFrom(const CallPhoneState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phonedata.CallPhoneState)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CallPhoneState::UnsafeMergeFrom(const CallPhoneState& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.phonestate() != 0) {
    set_phonestate(from.phonestate());
  }
  if (from.ttphonesignal() != 0) {
    set_ttphonesignal(from.ttphonesignal());
  }
  if (from.phonenumber().size() > 0) {

    phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
  }
}

void CallPhoneState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phonedata.CallPhoneState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallPhoneState::CopyFrom(const CallPhoneState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phonedata.CallPhoneState)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CallPhoneState::IsInitialized() const {

  return true;
}

void CallPhoneState::Swap(CallPhoneState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallPhoneState::InternalSwap(CallPhoneState* other) {
  std::swap(phonestate_, other->phonestate_);
  std::swap(ttphonesignal_, other->ttphonesignal_);
  phonenumber_.Swap(&other->phonenumber_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallPhoneState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CallPhoneState_descriptor_;
  metadata.reflection = CallPhoneState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallPhoneState

// optional .phonedata.CallPhoneState.PhoneState phoneState = 1;
void CallPhoneState::clear_phonestate() {
  phonestate_ = 0;
}
::phonedata::CallPhoneState_PhoneState CallPhoneState::phonestate() const {
  // @@protoc_insertion_point(field_get:phonedata.CallPhoneState.phoneState)
  return static_cast< ::phonedata::CallPhoneState_PhoneState >(phonestate_);
}
void CallPhoneState::set_phonestate(::phonedata::CallPhoneState_PhoneState value) {
  
  phonestate_ = value;
  // @@protoc_insertion_point(field_set:phonedata.CallPhoneState.phoneState)
}

// optional int32 ttPhoneSignal = 2;
void CallPhoneState::clear_ttphonesignal() {
  ttphonesignal_ = 0;
}
::google::protobuf::int32 CallPhoneState::ttphonesignal() const {
  // @@protoc_insertion_point(field_get:phonedata.CallPhoneState.ttPhoneSignal)
  return ttphonesignal_;
}
void CallPhoneState::set_ttphonesignal(::google::protobuf::int32 value) {
  
  ttphonesignal_ = value;
  // @@protoc_insertion_point(field_set:phonedata.CallPhoneState.ttPhoneSignal)
}

// optional string phoneNumber = 3;
void CallPhoneState::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CallPhoneState::phonenumber() const {
  // @@protoc_insertion_point(field_get:phonedata.CallPhoneState.phoneNumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallPhoneState::set_phonenumber(const ::std::string& value) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phonedata.CallPhoneState.phoneNumber)
}
void CallPhoneState::set_phonenumber(const char* value) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phonedata.CallPhoneState.phoneNumber)
}
void CallPhoneState::set_phonenumber(const char* value, size_t size) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phonedata.CallPhoneState.phoneNumber)
}
::std::string* CallPhoneState::mutable_phonenumber() {
  
  // @@protoc_insertion_point(field_mutable:phonedata.CallPhoneState.phoneNumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CallPhoneState::release_phonenumber() {
  // @@protoc_insertion_point(field_release:phonedata.CallPhoneState.phoneNumber)
  
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallPhoneState::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    
  } else {
    
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:phonedata.CallPhoneState.phoneNumber)
}

inline const CallPhoneState* CallPhoneState::internal_default_instance() {
  return &CallPhoneState_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace phonedata

// @@protoc_insertion_point(global_scope)
