// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TtPhoneSms.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TtPhoneSms.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace phonedata {

namespace {

const ::google::protobuf::Descriptor* TtPhoneSms_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TtPhoneSms_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_TtPhoneSms_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_TtPhoneSms_2eproto() {
  protobuf_AddDesc_TtPhoneSms_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "TtPhoneSms.proto");
  GOOGLE_CHECK(file != NULL);
  TtPhoneSms_descriptor_ = file->message_type(0);
  static const int TtPhoneSms_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtPhoneSms, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtPhoneSms, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtPhoneSms, issend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtPhoneSms, issendsuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtPhoneSms, isreceiversuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtPhoneSms, messagetext_),
  };
  TtPhoneSms_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TtPhoneSms_descriptor_,
      TtPhoneSms::internal_default_instance(),
      TtPhoneSms_offsets_,
      -1,
      -1,
      -1,
      sizeof(TtPhoneSms),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TtPhoneSms, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_TtPhoneSms_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TtPhoneSms_descriptor_, TtPhoneSms::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_TtPhoneSms_2eproto() {
  TtPhoneSms_default_instance_.Shutdown();
  delete TtPhoneSms_reflection_;
}

void protobuf_InitDefaults_TtPhoneSms_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  TtPhoneSms_default_instance_.DefaultConstruct();
  TtPhoneSms_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_TtPhoneSms_2eproto_once_);
void protobuf_InitDefaults_TtPhoneSms_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_TtPhoneSms_2eproto_once_,
                 &protobuf_InitDefaults_TtPhoneSms_2eproto_impl);
}
void protobuf_AddDesc_TtPhoneSms_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_TtPhoneSms_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020TtPhoneSms.proto\022\tphonedata\"\204\001\n\nTtPhon"
    "eSms\022\n\n\002ip\030\001 \001(\t\022\023\n\013phoneNumber\030\002 \001(\t\022\016\n"
    "\006isSend\030\003 \001(\010\022\025\n\risSendSuccess\030\004 \001(\010\022\031\n\021"
    "isReceiverSuccess\030\005 \001(\010\022\023\n\013messageText\030\006"
    " \001(\tB#\n\017com.qzy.tt.dataB\020TtPhoneSmsProto"
    "sb\006proto3", 209);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TtPhoneSms.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_TtPhoneSms_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_TtPhoneSms_2eproto_once_);
void protobuf_AddDesc_TtPhoneSms_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_TtPhoneSms_2eproto_once_,
                 &protobuf_AddDesc_TtPhoneSms_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TtPhoneSms_2eproto {
  StaticDescriptorInitializer_TtPhoneSms_2eproto() {
    protobuf_AddDesc_TtPhoneSms_2eproto();
  }
} static_descriptor_initializer_TtPhoneSms_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TtPhoneSms::kIpFieldNumber;
const int TtPhoneSms::kPhoneNumberFieldNumber;
const int TtPhoneSms::kIsSendFieldNumber;
const int TtPhoneSms::kIsSendSuccessFieldNumber;
const int TtPhoneSms::kIsReceiverSuccessFieldNumber;
const int TtPhoneSms::kMessageTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TtPhoneSms::TtPhoneSms()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TtPhoneSms_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:phonedata.TtPhoneSms)
}

void TtPhoneSms::InitAsDefaultInstance() {
}

TtPhoneSms::TtPhoneSms(const TtPhoneSms& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phonedata.TtPhoneSms)
}

void TtPhoneSms::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&issend_, 0, reinterpret_cast<char*>(&isreceiversuccess_) -
    reinterpret_cast<char*>(&issend_) + sizeof(isreceiversuccess_));
  _cached_size_ = 0;
}

TtPhoneSms::~TtPhoneSms() {
  // @@protoc_insertion_point(destructor:phonedata.TtPhoneSms)
  SharedDtor();
}

void TtPhoneSms::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TtPhoneSms::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TtPhoneSms::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TtPhoneSms_descriptor_;
}

const TtPhoneSms& TtPhoneSms::default_instance() {
  protobuf_InitDefaults_TtPhoneSms_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TtPhoneSms> TtPhoneSms_default_instance_;

TtPhoneSms* TtPhoneSms::New(::google::protobuf::Arena* arena) const {
  TtPhoneSms* n = new TtPhoneSms;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TtPhoneSms::Clear() {
// @@protoc_insertion_point(message_clear_start:phonedata.TtPhoneSms)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TtPhoneSms, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TtPhoneSms*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(issend_, isreceiversuccess_);
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool TtPhoneSms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phonedata.TtPhoneSms)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phonedata.TtPhoneSms.ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_phoneNumber;
        break;
      }

      // optional string phoneNumber = 2;
      case 2: {
        if (tag == 18) {
         parse_phoneNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phonedata.TtPhoneSms.phoneNumber"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_isSend;
        break;
      }

      // optional bool isSend = 3;
      case 3: {
        if (tag == 24) {
         parse_isSend:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issend_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_isSendSuccess;
        break;
      }

      // optional bool isSendSuccess = 4;
      case 4: {
        if (tag == 32) {
         parse_isSendSuccess:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issendsuccess_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_isReceiverSuccess;
        break;
      }

      // optional bool isReceiverSuccess = 5;
      case 5: {
        if (tag == 40) {
         parse_isReceiverSuccess:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isreceiversuccess_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_messageText;
        break;
      }

      // optional string messageText = 6;
      case 6: {
        if (tag == 50) {
         parse_messageText:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagetext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->messagetext().data(), this->messagetext().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phonedata.TtPhoneSms.messageText"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phonedata.TtPhoneSms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phonedata.TtPhoneSms)
  return false;
#undef DO_
}

void TtPhoneSms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phonedata.TtPhoneSms)
  // optional string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtPhoneSms.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // optional string phoneNumber = 2;
  if (this->phonenumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtPhoneSms.phoneNumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phonenumber(), output);
  }

  // optional bool isSend = 3;
  if (this->issend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->issend(), output);
  }

  // optional bool isSendSuccess = 4;
  if (this->issendsuccess() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->issendsuccess(), output);
  }

  // optional bool isReceiverSuccess = 5;
  if (this->isreceiversuccess() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->isreceiversuccess(), output);
  }

  // optional string messageText = 6;
  if (this->messagetext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagetext().data(), this->messagetext().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtPhoneSms.messageText");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->messagetext(), output);
  }

  // @@protoc_insertion_point(serialize_end:phonedata.TtPhoneSms)
}

::google::protobuf::uint8* TtPhoneSms::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phonedata.TtPhoneSms)
  // optional string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtPhoneSms.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // optional string phoneNumber = 2;
  if (this->phonenumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtPhoneSms.phoneNumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phonenumber(), target);
  }

  // optional bool isSend = 3;
  if (this->issend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->issend(), target);
  }

  // optional bool isSendSuccess = 4;
  if (this->issendsuccess() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->issendsuccess(), target);
  }

  // optional bool isReceiverSuccess = 5;
  if (this->isreceiversuccess() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->isreceiversuccess(), target);
  }

  // optional string messageText = 6;
  if (this->messagetext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagetext().data(), this->messagetext().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phonedata.TtPhoneSms.messageText");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->messagetext(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:phonedata.TtPhoneSms)
  return target;
}

size_t TtPhoneSms::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phonedata.TtPhoneSms)
  size_t total_size = 0;

  // optional string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // optional string phoneNumber = 2;
  if (this->phonenumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phonenumber());
  }

  // optional bool isSend = 3;
  if (this->issend() != 0) {
    total_size += 1 + 1;
  }

  // optional bool isSendSuccess = 4;
  if (this->issendsuccess() != 0) {
    total_size += 1 + 1;
  }

  // optional bool isReceiverSuccess = 5;
  if (this->isreceiversuccess() != 0) {
    total_size += 1 + 1;
  }

  // optional string messageText = 6;
  if (this->messagetext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->messagetext());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TtPhoneSms::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phonedata.TtPhoneSms)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TtPhoneSms* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TtPhoneSms>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phonedata.TtPhoneSms)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phonedata.TtPhoneSms)
    UnsafeMergeFrom(*source);
  }
}

void TtPhoneSms::MergeFrom(const TtPhoneSms& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phonedata.TtPhoneSms)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TtPhoneSms::UnsafeMergeFrom(const TtPhoneSms& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.phonenumber().size() > 0) {

    phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
  }
  if (from.issend() != 0) {
    set_issend(from.issend());
  }
  if (from.issendsuccess() != 0) {
    set_issendsuccess(from.issendsuccess());
  }
  if (from.isreceiversuccess() != 0) {
    set_isreceiversuccess(from.isreceiversuccess());
  }
  if (from.messagetext().size() > 0) {

    messagetext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagetext_);
  }
}

void TtPhoneSms::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phonedata.TtPhoneSms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TtPhoneSms::CopyFrom(const TtPhoneSms& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phonedata.TtPhoneSms)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TtPhoneSms::IsInitialized() const {

  return true;
}

void TtPhoneSms::Swap(TtPhoneSms* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TtPhoneSms::InternalSwap(TtPhoneSms* other) {
  ip_.Swap(&other->ip_);
  phonenumber_.Swap(&other->phonenumber_);
  std::swap(issend_, other->issend_);
  std::swap(issendsuccess_, other->issendsuccess_);
  std::swap(isreceiversuccess_, other->isreceiversuccess_);
  messagetext_.Swap(&other->messagetext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TtPhoneSms::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TtPhoneSms_descriptor_;
  metadata.reflection = TtPhoneSms_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TtPhoneSms

// optional string ip = 1;
void TtPhoneSms::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TtPhoneSms::ip() const {
  // @@protoc_insertion_point(field_get:phonedata.TtPhoneSms.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtPhoneSms::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phonedata.TtPhoneSms.ip)
}
void TtPhoneSms::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phonedata.TtPhoneSms.ip)
}
void TtPhoneSms::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phonedata.TtPhoneSms.ip)
}
::std::string* TtPhoneSms::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:phonedata.TtPhoneSms.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TtPhoneSms::release_ip() {
  // @@protoc_insertion_point(field_release:phonedata.TtPhoneSms.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtPhoneSms::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:phonedata.TtPhoneSms.ip)
}

// optional string phoneNumber = 2;
void TtPhoneSms::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TtPhoneSms::phonenumber() const {
  // @@protoc_insertion_point(field_get:phonedata.TtPhoneSms.phoneNumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtPhoneSms::set_phonenumber(const ::std::string& value) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phonedata.TtPhoneSms.phoneNumber)
}
void TtPhoneSms::set_phonenumber(const char* value) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phonedata.TtPhoneSms.phoneNumber)
}
void TtPhoneSms::set_phonenumber(const char* value, size_t size) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phonedata.TtPhoneSms.phoneNumber)
}
::std::string* TtPhoneSms::mutable_phonenumber() {
  
  // @@protoc_insertion_point(field_mutable:phonedata.TtPhoneSms.phoneNumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TtPhoneSms::release_phonenumber() {
  // @@protoc_insertion_point(field_release:phonedata.TtPhoneSms.phoneNumber)
  
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtPhoneSms::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    
  } else {
    
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:phonedata.TtPhoneSms.phoneNumber)
}

// optional bool isSend = 3;
void TtPhoneSms::clear_issend() {
  issend_ = false;
}
bool TtPhoneSms::issend() const {
  // @@protoc_insertion_point(field_get:phonedata.TtPhoneSms.isSend)
  return issend_;
}
void TtPhoneSms::set_issend(bool value) {
  
  issend_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtPhoneSms.isSend)
}

// optional bool isSendSuccess = 4;
void TtPhoneSms::clear_issendsuccess() {
  issendsuccess_ = false;
}
bool TtPhoneSms::issendsuccess() const {
  // @@protoc_insertion_point(field_get:phonedata.TtPhoneSms.isSendSuccess)
  return issendsuccess_;
}
void TtPhoneSms::set_issendsuccess(bool value) {
  
  issendsuccess_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtPhoneSms.isSendSuccess)
}

// optional bool isReceiverSuccess = 5;
void TtPhoneSms::clear_isreceiversuccess() {
  isreceiversuccess_ = false;
}
bool TtPhoneSms::isreceiversuccess() const {
  // @@protoc_insertion_point(field_get:phonedata.TtPhoneSms.isReceiverSuccess)
  return isreceiversuccess_;
}
void TtPhoneSms::set_isreceiversuccess(bool value) {
  
  isreceiversuccess_ = value;
  // @@protoc_insertion_point(field_set:phonedata.TtPhoneSms.isReceiverSuccess)
}

// optional string messageText = 6;
void TtPhoneSms::clear_messagetext() {
  messagetext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TtPhoneSms::messagetext() const {
  // @@protoc_insertion_point(field_get:phonedata.TtPhoneSms.messageText)
  return messagetext_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtPhoneSms::set_messagetext(const ::std::string& value) {
  
  messagetext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phonedata.TtPhoneSms.messageText)
}
void TtPhoneSms::set_messagetext(const char* value) {
  
  messagetext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phonedata.TtPhoneSms.messageText)
}
void TtPhoneSms::set_messagetext(const char* value, size_t size) {
  
  messagetext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phonedata.TtPhoneSms.messageText)
}
::std::string* TtPhoneSms::mutable_messagetext() {
  
  // @@protoc_insertion_point(field_mutable:phonedata.TtPhoneSms.messageText)
  return messagetext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TtPhoneSms::release_messagetext() {
  // @@protoc_insertion_point(field_release:phonedata.TtPhoneSms.messageText)
  
  return messagetext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TtPhoneSms::set_allocated_messagetext(::std::string* messagetext) {
  if (messagetext != NULL) {
    
  } else {
    
  }
  messagetext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messagetext);
  // @@protoc_insertion_point(field_set_allocated:phonedata.TtPhoneSms.messageText)
}

inline const TtPhoneSms* TtPhoneSms::internal_default_instance() {
  return &TtPhoneSms_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace phonedata

// @@protoc_insertion_point(global_scope)
